/*--------------------------------------------------------------
Minimal Grid by @aaronrutley
Version: 2.0.0
Github: https://github.com/AaronRutley/minimal-grid
--------------------------------------------------------------*/

// Border Box all the things
*, *:before, *:after {
	-webkit-box-sizing: border-box;
	   -moz-box-sizing: border-box;
			box-sizing: border-box;
}

// PX to EM Conversion
$base-em-context: 16;
@function em($pixels, $context: $base-em-context) {
  @return #{$pixels/$context}em;
}

// Starter Breakpoints
$breakpoint-small:  em(400);
$breakpoint-medium: em(800);
$breakpoint-large:  em(1200);
$breakpoint-xlarge: em(1600);

// Grid Defaults
$minimal-grid-container-max-width:1200px;
$minimal-grid-gutter-width:20px;

// Clearfix
@mixin clearfix {
  &:after {
	content: "";
	display: table;
	clear: both;
  }
}

// Grid Container
@mixin grid-container {
	max-width: $minimal-grid-container-max-width;
	margin: 0 auto;
	@include clearfix;
}

@mixin grid-container-collapse {
	max-width: $minimal-grid-container-max-width - $minimal-grid-gutter-width;
	margin: 0 auto;
	@include clearfix;
}

// Grid Item
@mixin grid-item {
	display: inline-block;
	float: left;
	padding-left:($minimal-grid-gutter-width/2);
	padding-right:($minimal-grid-gutter-width/2);
	width: 100%;
}

@mixin grid-item-collapse {
	display: inline-block;
	float: left;
	padding-left:0;
	padding-right: 0;
	width: 100%;
}

// Block Container
@mixin grid-list {
	max-width: $minimal-grid-container-max-width;
	padding:0;
	margin: 0 auto;
	@include clearfix;
	li {
		display: inline-block;
		float: left;
		list-style: none;
		margin:0;
	}
}

// Grid Mixin to round 16/33/66
@mixin grid($percentage) {
	@if $percentage 		== 16  	{ width:16.666666%; }
	@else if $percentage	== 33  	{ width:33.333333%; }
	@else if $percentage	== 66  	{ width:66.666666%; }
	@else 							{ width:$percentage*1%; }
}

// Breakpoint Mixin
@mixin breakpoint($point) {
	@if $point == from-small {
		@media only screen and  (min-width: $breakpoint-small) { @content; }
	}
	@else if $point == from-medium {
		@media only screen and  (min-width: $breakpoint-medium) { @content; }
	}
	@else if $point == from-large {
		@media only screen and (min-width: $breakpoint-large) { @content; }
	}
	@else if $point == from-xlarge {
		@media only screen and (min-width: $breakpoint-xlarge) { @content; }
	}
}